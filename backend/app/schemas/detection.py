from pydantic import BaseModel, Field
from typing import Optional
from datetime import datetime


class DetectionCreate(BaseModel):
    """
    Schema for creating a new bird detection.
    Used in POST requests to submit detection data for a single species.
    """

    file_name: str = Field(..., description="Name of the analyzed audio file (e.g., recording.wav)")
    recording_datetime: datetime = Field(..., description="Datetime when the recording was made (ISO 8601)")
    detection_time: datetime = Field(..., description="Datetime when this species call occurred")
    species: str = Field(..., description="Common name of the bird species (e.g., Rufous Hummingbird)")
    scientific_name: str = Field(..., description="Scientific (Latin) name of the species (e.g., Selasphorus rufus)")
    confidence: float = Field(..., description="Model confidence score between 0.0 and 1.0")
    start_sec: float = Field(..., description="Start time (in seconds) of the detection in the audio file")
    end_sec: float = Field(..., description="End time (in seconds) of the detection in the audio file")
    lat: float = Field(..., description="Latitude of the recording location")
    lon: float = Field(..., description="Longitude of the recording location")
    image_path: Optional[str] = Field(None, description="Path to generated bird image (e.g., DALLÂ·E)")
    sonogram_path: Optional[str] = Field(None, description="Path to generated sonogram image")
    snippet_path: Optional[str] = Field(None, description="Path to audio snippet of the detected bird call")
    # user_id: Optional[int] = None  # Uncomment when user authentication is implemented


class Detection(DetectionCreate):
    """
    Full detection schema for responses. Includes database ID and creation timestamp.
    """
    
    id: int = Field(..., description="Unique ID of the detection (generated by database)")
    created_at: datetime = Field(..., description="Timestamp when the detection was stored (ISO 8601)")

    model_config = {"from_attributes": True}
